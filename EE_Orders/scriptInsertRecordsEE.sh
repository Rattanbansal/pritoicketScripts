#!/bin/bash

set -e  # Exit immediately if any command exits with a non-zero status
TIMEOUT_PERIOD=100


# DB_HOST='localhost'
# DB_USER='admin'
# DB_PASS='redhat'
source ~/vault/vault_fetch_creds.sh

# Fetch credentials for 20Server
fetch_db_credentials "19ServerNoVPN_db-creds"


DB_NAME='rattan'
BATCH_SIZE=1
tablename=$1

mysqlHost="prodrds.prioticket.com"
mysqlUser=pipeuser
mysqlPassword=d4fb46eccNRAL
mysqlDatabase="prioprodrds"

SECDATABASE='priopassdb'
SECHOST='production-secondary-db-node.cluster-ck6w2al7sgpk.eu-west-1.rds.amazonaws.com'
SECUSER='pipeuser'
SECPASSWORD='d4fb46eccNRAL'

# Get all unique ticket_ids
ticket_ids=$(timeout $TIMEOUT_PERIOD time mysql -h"$DB_HOST" -u"$DB_USER" --port=$DB_PORT -p"$DB_PASSWORD" -D"$DB_NAME" -sN -e "SELECT DISTINCT(ticketId) FROM $tablename where status = '0' and ticketpriceschedule_id != '0'") || exit 1  # channel_id in where clause we used as status to identify which records has been updated

# Loop through each ticket_id
for ticket_id in $ticket_ids; do
    # Get all vt_group_no for the current ticket_id
    vt_group_numbers=$(timeout $TIMEOUT_PERIOD time mysql -h"$DB_HOST" -u"$DB_USER" --port=$DB_PORT -p"$DB_PASSWORD" -D"$DB_NAME" -sN -e "SELECT distinct vt_group_no FROM $tablename WHERE ticketId = '$ticket_id' and status = '0' and ticketpriceschedule_id != '0'") || exit 1
    
    # Convert the vt_group_numbers into an array
    vt_group_array=($vt_group_numbers)
    total_vt_groups=${#vt_group_array[@]}

    # Print the total count of vt_group_no for the current ticket_id
    echo "Processing Ticket ID: $ticket_id with $total_vt_groups vt_group_no values"

    # Initialize the progress tracking for the current ticket_id
    current_progress=0
    
    # Loop through vt_group_no array in batches
    for ((i=0; i<$total_vt_groups; i+=BATCH_SIZE)); do
        # Create a batch of vt_group_no values
        batch=("${vt_group_array[@]:$i:$BATCH_SIZE}")
        batch_size=${#batch[@]}

        # Calculate the current progress level for this ticket_id
        current_progress=$((i + batch_size))
        
        # Join the batch into a comma-separated list
        batch_str=$(IFS=,; echo "${batch[*]}")

        # Print progress information for the current ticket_id
        echo "Processing batch of size $batch_size for Ticket ID: $ticket_id ($current_progress / $total_vt_groups processed)" >> log.txt
        
        # Construct and execute the UPDATE query
        # update_query="UPDATE your_table SET your_column = 'your_value' WHERE ticket_id = $ticket_id AND vt_group_no IN ($batch_str)"

        MISMATCH="select IFNULL(TRIM(TRAILING ',' FROM GROUP_CONCAT(DISTINCT(final1.vt_group_no))), '') as order_id from (SELECT *, case when row_type = '3' and commission_on_sale = '1' then salePrice*percentage_commission/100 when row_type = '3' and commission_on_sale = '0' then commission_price when row_type = '2' and resale_percentage = '1' then salePrice*percentage_commission/100 when row_type = '2' and resale_percentage = '0' then commission_price when row_type = '4' then commission_price when row_type = '17' then commission_price else partner_net_price end as priceshouldbe FROM ( SELECT vt_group_no, transaction_id, hotel_id, channel_id, ticketId, ticketpriceschedule_id, version, row_type, partner_net_price,salePrice, (case when row_type = '2' and tlc_ticketpriceschedule_id is not NULL then tlc_res_per when row_type = '2' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_res_per when row_type = '2' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_res_per when row_type = '3' and tlc_ticketpriceschedule_id is not NULL then tlc_dist_per when row_type = '3' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_dist_per when row_type = '3' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_dist_per when row_type = '4' and tlc_ticketpriceschedule_id is not NULL then tlc_hgs_per when row_type = '4' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_hgs_per when row_type = '4' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_hgs_per when row_type = '1' then '100.00' else 'No_Setting_found' end) as percentage_commission, (case when row_type = '2' and tlc_ticketpriceschedule_id is not NULL then tlc_museum_net_commission when row_type = '2' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_museum_net_commission when row_type = '2' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_museum_net_commission when row_type = '3' and tlc_ticketpriceschedule_id is not NULL then tlc_hotel_commission_net_price when row_type = '3' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_hotel_commission_net_price when row_type = '3' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_hotel_commission_net_price when row_type = '4' and tlc_ticketpriceschedule_id is not NULL then tlc_hgs_commission_net_price when row_type = '4' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_hgs_commission_net_price when row_type = '4' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_hgs_commission_net_price when row_type = '17' and tlc_ticketpriceschedule_id is not NULL then tlc_merchant_net_commission when row_type = '17' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_merchant_net_commission when row_type = '17' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_merchant_net_commission else 'No_Setting_found' end) as commission_price, case when tlc_ticketpriceschedule_id is not NULL then tlc_comm_on_sale when tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_comm_on_sale when tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_comm_on_sale else 'NO SETTING_FOUND' end as commission_on_sale, case when tlc_ticketpriceschedule_id is not NULL then tlc_is_resale_percentage when tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_is_resale_percentage when tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_is_resale_percentage else 'NO SETTING_FOUND' end as resale_percentage FROM ( SELECT scdata.*, '----Price List Level---' AS type3, pl.ticketpriceschedule_id AS clc_ticketpriceschedule_id, pl.hotel_prepaid_commission_percentage as pl_dist_per, pl.hgs_prepaid_commission_percentage as pl_hgs_per, pl.merchant_fee_percentage as pl_mer_per, pl.resale_percentage as pl_res_per, pl.commission_on_sale_price as pl_comm_on_sale, pl.is_resale_percentage as pl_is_resale_percentage, pl.museum_net_commission as pl_museum_net_commission, pl.merchant_net_commission as pl_merchant_net_commission, pl.hotel_commission_net_price as pl_hotel_commission_net_price, pl.hgs_commission_net_price as pl_hgs_commission_net_price FROM ( SELECT tlcdata.*, '----Sub catalog Level---' AS type2, sc.catalog_id, sc.ticketpriceschedule_id AS sc_ticketpriceschedule_id, sc.resale_currency_level AS sc_resale_currency_level, sc.hotel_prepaid_commission_percentage as sc_dist_per, sc.hgs_prepaid_commission_percentage as sc_hgs_per, sc.merchant_fee_percentage as sc_mer_per, sc.resale_percentage as sc_res_per, sc.commission_on_sale_price as sc_comm_on_sale , sc.is_resale_percentage as sc_is_resale_percentage, sc.museum_net_commission as sc_museum_net_commission, sc.merchant_net_commission as sc_merchant_net_commission, sc.hotel_commission_net_price as sc_hotel_commission_net_price, sc.hgs_commission_net_price as sc_hgs_commission_net_price FROM ( SELECT vt.vt_group_no, CONCAT(vt.transaction_id, 'R') AS transaction_id, vt.order_confirm_date, vt.created_date, vt.hotel_id, vt.channel_id, vt.ticketId, vt.ticketpriceschedule_id, vt.version, vt.row_type, vt.partner_gross_price, vt.partner_net_price, maxversion.salePrice, vt.order_currency_partner_gross_price, vt.order_currency_partner_net_price, vt.supplier_gross_price, vt.supplier_net_price, vt.col2, qc.cod_id AS company_id, qc.channel_id AS company_pricelist_id, qc.sub_catalog_id AS company_sub_catalog, '---TLC LEVEL---' AS TYPE, tlc.ticketpriceschedule_id AS tlc_ticketpriceschedule_id, tlc.resale_currency_level, tlc.hotel_prepaid_commission_percentage as tlc_dist_per, tlc.hgs_prepaid_commission_percentage as tlc_hgs_per, tlc.merchant_fee_percentage as tlc_mer_per, tlc.resale_percentage as tlc_res_per, tlc.commission_on_sale_price as tlc_comm_on_sale, tlc.is_resale_percentage as tlc_is_resale_percentage, tlc.museum_net_commission as tlc_museum_net_commission, tlc.merchant_net_commission as tlc_merchant_net_commission, tlc.hotel_commission_net_price as tlc_hotel_commission_net_price, tlc.hgs_commission_net_price as tlc_hgs_commission_net_price FROM visitor_tickets vt JOIN( SELECT vt_group_no, transaction_id, row_type, max(case when row_type = '1' then partner_net_price else 0 end) as salePrice, MAX(VERSION) AS VERSION FROM visitor_tickets WHERE ticketId = '$ticket_id' and vt_group_no IN($batch_str) AND col2 != '2' and transaction_type_name not like '%Reprice Surcharge%' and transaction_type_name not like '%Reprice Discount%' GROUP BY vt_group_no, transaction_id ) AS maxversion ON vt.vt_group_no = maxversion.vt_group_no AND vt.transaction_id = maxversion.transaction_id AND ABS(vt.version - maxversion.version) = '0' LEFT JOIN tmp.qr_codes qc ON qc.cod_id = vt.hotel_id AND qc.cashier_type = '1' LEFT JOIN tmp.ticket_level_commission tlc ON tlc.hotel_id = vt.hotel_id AND tlc.ticketpriceschedule_id = vt.ticketpriceschedule_id AND tlc.ticket_id = vt.ticketId AND tlc.deleted = '0' AND tlc.is_adjust_pricing = '1' WHERE vt.col2 != '2' ) AS tlcdata LEFT JOIN tmp.channel_level_commission sc ON tlcdata.ticketpriceschedule_id = sc.ticketpriceschedule_id AND tlcdata.ticketId = sc.ticket_id AND IF( tlcdata.company_sub_catalog = '0', 122222, tlcdata.company_sub_catalog ) = sc.catalog_id AND sc.is_adjust_pricing = '1' AND sc.deleted = '0' ) AS scdata LEFT JOIN tmp.channel_level_commission pl ON scdata.ticketpriceschedule_id = pl.ticketpriceschedule_id AND scdata.ticketId = pl.ticket_id AND scdata.channel_id = pl.channel_id AND pl.catalog_id = '0' AND pl.is_adjust_pricing = '1' AND pl.deleted = '0' ) AS shouldbe ) AS final) as final1 where priceshouldbe != 'No_Setting_found' and ABS(priceshouldbe - partner_net_price) > '0.02';"

        echo "Found MIsmatch Query"

        echo "$MISMATCH" >> rattan.sql

        mismatchvgn=$(timeout $TIMEOUT_PERIOD time mysql -h"$mysqlHost" -u"$mysqlUser" -p"$mysqlPassword" -D"$mysqlDatabase" -sN -e "$MISMATCH")

        echo "$mismatchvgn"

        if [ -z "$mismatchvgn" ]; then

            echo "No results found. Proceeding with further steps. for ($batch_str)" >> no_mismatch.txt
            # Add your further steps here
            timeout $TIMEOUT_PERIOD time mysql -h"$DB_HOST" -u"$DB_USER" --port=$DB_PORT -p"$DB_PASSWORD" -D"$DB_NAME" -sN -e "update $tablename set status = '1' where vt_group_no in ($batch_str)" || exit 1

        else 

            echo "------$(date '+%Y-%m-%d %H:%M:%S.%3N')--------" >> found_mismatch.txt 
            echo "$batch_str" >> found_mismatch.txt
             echo "Mismatch Out of above" >> found_mismatch.txt
            echo "Query returned results:"
            echo "$mismatchvgn" >> found_mismatchfinal.txt

            select_query_vt="insert into visitor_tickets (id, created_date, transaction_id, invoice_id, channel_id, channel_name, reseller_id, reseller_name, saledesk_id, saledesk_name, financial_id, financial_name, transaction_type_name, transaction_type_id, ticketId, shared_capacity_id, ticket_booking_id, related_order_id, related_booking_id, ticket_title, ticketwithdifferentpricing, ticketpriceschedule_id, ticket_extra_option_id, group_type_ticket, group_price, group_quantity, group_linked_with, selected_date, booking_selected_date, from_time, to_time, slot_type, amount_before_extra_discount, discount_before_extra_discount, hto_id, visitor_group_no, roomNo, nights, user_age, gender, user_image, visitor_country, merchantAccountCode, merchantReference, original_pspReference, shopperReference, partner_id, relational_partner_id, partner_name, museum_name, museum_id, hotel_name, hotel_id, pos_point_id, pos_point_name, shift_id, passNo, pass_type, ticketAmt, visit_date, visit_date_time, ticketType, tickettype_name, discount_applied_on_how_many_tickets, paid, payment_method, isBillToHotel, card_name, pspReference, card_type, captured, age_group, discount, isDiscountInPercent, updated_discount_type, without_elo_reference_no, debitor, creditor, split_cash_amount, split_card_amount, split_voucher_amount, split_direct_payment_amount, total_gross_commission, total_net_commission, commission_type, partner_gross_price, order_currency_partner_gross_price, partner_gross_price_without_combi_discount, partner_net_price, order_currency_partner_net_price, partner_net_price_without_combi_discount, isCommissionInPercent, tax_id, tax_value, tax_name, timezone, invoice_status, row_type, updated_by_id, updated_by_username, voucher_updated_by, voucher_updated_by_name, redeem_method, redeem_by_ticket_id, redeem_by_ticket_title, cashier_id, cashier_name, cashier_register_id, targetlocation, paymentMethodType, targetcity, service_name, adjustment_row_type, description, distributor_status, adyen_status, adjustment_method, all_ticket_ids, time_based_done, visitor_invoice_id, ticketPrice, deleted, is_refunded, is_block, is_edited, vt_group_no, user_name, issuer_country_code, distributor_commission_invoice, activation_method, is_prioticket, is_shop_product, shop_category_name, external_account_number, used, ticket_status, is_prepaid, is_purchased_with_postpaid, invoice_type, supplier_currency_symbol, order_currency_code, order_currency_symbol, currency_rate, invoice_variant, service_cost, service_cost_net_amount, service_cost_type, scanned_pass, groupTransactionId, booking_status, channel_type, is_voucher, extra_text_field_answer, distributor_type, distributor_partner_id, distributor_partner_name, issuer_country_name, chart_number, extra_discount, manual_payment_note, account_number, is_custom_setting, external_product_id, supplier_currency_code, col1, col2, partner_category_id, col4, partner_category_name, col6, col7, col8, is_data_moved, action_performed, updated_at, tp_payment_method, order_confirm_date, payment_date, order_cancellation_date, voucher_creation_date, primary_host_name,supplier_gross_price, supplier_discount, supplier_ticket_amt, supplier_tax_value,supplier_net_price, last_modified_at, market_merchant_id, merchant_admin_id, order_updated_cashier_id, order_updated_cashier_name, version, supplier_tax_id, merchant_currency_code, merchant_price, merchant_net_price, merchant_tax_id, admin_currency_code) select vtf.id, vtf.created_date, vtf.transaction_id, vtf.invoice_id, vtf.channel_id, vtf.channel_name, vtf.reseller_id, vtf.reseller_name, vtf.saledesk_id, vtf.saledesk_name, vtf.financial_id, vtf.financial_name, vtf.transaction_type_name, vtf.transaction_type_id, vtf.ticketId, vtf.shared_capacity_id, vtf.ticket_booking_id, vtf.related_order_id, vtf.related_booking_id, vtf.ticket_title, vtf.ticketwithdifferentpricing, vtf.ticketpriceschedule_id, vtf.ticket_extra_option_id, vtf.group_type_ticket, vtf.group_price, vtf.group_quantity, vtf.group_linked_with, vtf.selected_date, vtf.booking_selected_date, vtf.from_time, vtf.to_time, vtf.slot_type, vtf.amount_before_extra_discount, vtf.discount_before_extra_discount, vtf.hto_id, vtf.visitor_group_no, vtf.roomNo, vtf.nights, vtf.user_age, vtf.gender, vtf.user_image, vtf.visitor_country, vtf.merchantAccountCode, vtf.merchantReference, vtf.original_pspReference, vtf.shopperReference, vtf.partner_id, vtf.relational_partner_id, vtf.partner_name, vtf.museum_name, vtf.museum_id, vtf.hotel_name, vtf.hotel_id, vtf.pos_point_id, vtf.pos_point_name, vtf.shift_id, vtf.passNo, vtf.pass_type, vtf.ticketAmt, vtf.visit_date, vtf.visit_date_time, vtf.ticketType, vtf.tickettype_name, vtf.discount_applied_on_how_many_tickets, vtf.paid, vtf.payment_method, vtf.isBillToHotel, vtf.card_name, vtf.pspReference, vtf.card_type, vtf.captured, vtf.age_group, vtf.discount, vtf.isDiscountInPercent, vtf.updated_discount_type, vtf.without_elo_reference_no, vtf.debitor, vtf.creditor, vtf.split_cash_amount, vtf.split_card_amount, vtf.split_voucher_amount, vtf.split_direct_payment_amount, vtf.total_gross_commission, vtf.total_net_commission, vtf.commission_type, (case when vtf.row_type = ddd.ddd_row_type then ROUND(ddd.ddd_gross_should_be,2) else ROUND(vtf.partner_gross_price,2) end) as partner_gross_price, vtf.order_currency_partner_gross_price, vtf.partner_gross_price_without_combi_discount, (case when vtf.row_type = ddd.ddd_row_type then ROUND(ddd.ddd_should_be_net,2) else ROUND(vtf.partner_net_price,2) end) as partner_net_price, vtf.order_currency_partner_net_price, vtf.partner_net_price_without_combi_discount, vtf.isCommissionInPercent, vtf.tax_id, vtf.tax_value, vtf.tax_name, vtf.timezone, vtf.invoice_status, vtf.row_type, vtf.updated_by_id, vtf.updated_by_username, vtf.voucher_updated_by, vtf.voucher_updated_by_name, vtf.redeem_method, vtf.redeem_by_ticket_id, vtf.redeem_by_ticket_title, vtf.cashier_id, vtf.cashier_name, vtf.cashier_register_id, vtf.targetlocation, vtf.paymentMethodType, vtf.targetcity, vtf.service_name, vtf.adjustment_row_type, vtf.description, vtf.distributor_status, vtf.adyen_status, vtf.adjustment_method, vtf.all_ticket_ids, vtf.time_based_done, vtf.visitor_invoice_id, vtf.ticketPrice, vtf.deleted, vtf.is_refunded, vtf.is_block, vtf.is_edited, vtf.vt_group_no, vtf.user_name, vtf.issuer_country_code, vtf.distributor_commission_invoice, vtf.activation_method, vtf.is_prioticket, vtf.is_shop_product, vtf.shop_category_name, vtf.external_account_number, vtf.used, vtf.ticket_status, vtf.is_prepaid, vtf.is_purchased_with_postpaid, vtf.invoice_type, vtf.supplier_currency_symbol, vtf.order_currency_code, vtf.order_currency_symbol, vtf.currency_rate, vtf.invoice_variant, vtf.service_cost, vtf.service_cost_net_amount, vtf.service_cost_type, vtf.scanned_pass, vtf.groupTransactionId, vtf.booking_status, vtf.channel_type, vtf.is_voucher, vtf.extra_text_field_answer, vtf.distributor_type, vtf.distributor_partner_id, vtf.distributor_partner_name, vtf.issuer_country_name, vtf.chart_number, vtf.extra_discount, vtf.manual_payment_note, vtf.account_number, vtf.is_custom_setting, vtf.external_product_id, vtf.supplier_currency_code, vtf.col1, vtf.col2, vtf.partner_category_id, vtf.col4, vtf.partner_category_name, vtf.col6, vtf.col7, vtf.col8, vtf.is_data_moved,concat(vtf.action_performed, ', EECommission_Jan') as action_performed, vtf.updated_at, vtf.tp_payment_method, vtf.order_confirm_date, vtf.payment_date, vtf.order_cancellation_date, vtf.voucher_creation_date, vtf.primary_host_name,supplier_gross_price, vtf.supplier_discount, vtf.supplier_ticket_amt, vtf.supplier_tax_value, supplier_net_price, CURRENT_TIMESTAMP as last_modified_at, vtf.market_merchant_id, vtf.merchant_admin_id, vtf.order_updated_cashier_id, vtf.order_updated_cashier_name, ROUND(vtf.version+1,1) as version, vtf.supplier_tax_id, vtf.merchant_currency_code, vtf.merchant_price, vtf.merchant_net_price, vtf.merchant_tax_id, vtf.admin_currency_code from (select fvt.* from visitor_tickets fvt join (select vt_group_no, transaction_id,row_type, max(version) as version from visitor_tickets where ticketId in ($ticket_id) and vt_group_no in ($mismatchvgn) and col2 != '2' group by vt_group_no, transaction_id, row_type) as mv on mv.vt_group_no = fvt.vt_group_no and fvt.transaction_id = mv.transaction_id and fvt.row_type = mv.row_type and ABS(fvt.version-mv.version) = '0' where fvt.col2 != '2') vtf left join (select vtt.vt_group_no as ddd_vt_group_no, vtt.transaction_id as ddd_transaction_id, vtt.version as ddd_version,vtt.row_type as ddd_row_type,vtt.partner_net_price as ddd_partner_net_price,ROUND(final.priceshouldbe,2) as ddd_should_be_net, vtt.partner_gross_price as ddd_partner_gross_price,vtt.tax_value as ddd_tax_value, FORMAT(ROUND(final.priceshouldbe,2),2)*(100+vtt.tax_value)/100 as ddd_gross_should_be, vtt.supplier_net_price as ddd_supplier_bet_price, vtt.supplier_gross_price as ddd_supplier_gross_price,vtt.supplier_tax_value as ddd_supplier_tax, vtt.action_performed as dd_action_performed, concat(vtt.action_performed, ', EECommission_Jan') as dd_action_performed_should_be from visitor_tickets vtt join (SELECT *, case when row_type = '3' and commission_on_sale = '1' then salePrice*percentage_commission/100 when row_type = '3' and commission_on_sale = '0' then commission_price when row_type = '2' and resale_percentage = '1' then salePrice*percentage_commission/100 when row_type = '2' and resale_percentage = '0' then commission_price when row_type = '4' then commission_price when row_type = '17' then commission_price else partner_net_price end as priceshouldbe from ( SELECT vt_group_no, transaction_id, hotel_id, channel_id, ticketId, ticketpriceschedule_id, version, row_type, partner_net_price,salePrice, (case when row_type = '2' and tlc_ticketpriceschedule_id is not NULL then tlc_res_per when row_type = '2' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_res_per when row_type = '2' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_res_per when row_type = '3' and tlc_ticketpriceschedule_id is not NULL then tlc_dist_per when row_type = '3' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_dist_per when row_type = '3' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_dist_per when row_type = '4' and tlc_ticketpriceschedule_id is not NULL then tlc_hgs_per when row_type = '4' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_hgs_per when row_type = '4' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_hgs_per when row_type = '1' then '100.00' else 'No_Setting_found' end) as percentage_commission, (case when row_type = '2' and tlc_ticketpriceschedule_id is not NULL then tlc_museum_net_commission when row_type = '2' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_museum_net_commission when row_type = '2' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_museum_net_commission when row_type = '3' and tlc_ticketpriceschedule_id is not NULL then tlc_hotel_commission_net_price when row_type = '3' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_hotel_commission_net_price when row_type = '3' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_hotel_commission_net_price when row_type = '4' and tlc_ticketpriceschedule_id is not NULL then tlc_hgs_commission_net_price when row_type = '4' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_hgs_commission_net_price when row_type = '4' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_hgs_commission_net_price when row_type = '17' and tlc_ticketpriceschedule_id is not NULL then tlc_merchant_net_commission when row_type = '17' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_merchant_net_commission when row_type = '17' and tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_merchant_net_commission else 'No_Setting_found' end) as commission_price, case when tlc_ticketpriceschedule_id is not NULL then tlc_comm_on_sale when tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_comm_on_sale when tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_comm_on_sale else 'NO SETTING_FOUND' end as commission_on_sale, case when tlc_ticketpriceschedule_id is not NULL then tlc_is_resale_percentage when tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is not NULL then sc_is_resale_percentage when tlc_ticketpriceschedule_id is NULL and sc_ticketpriceschedule_id is NULL and clc_ticketpriceschedule_id is not NULL then pl_is_resale_percentage else 'NO SETTING_FOUND' end as resale_percentage FROM ( SELECT scdata.*, '----Price List Level---' AS type3, pl.ticketpriceschedule_id AS clc_ticketpriceschedule_id, pl.hotel_prepaid_commission_percentage as pl_dist_per, pl.hgs_prepaid_commission_percentage as pl_hgs_per, pl.merchant_fee_percentage as pl_mer_per, pl.resale_percentage as pl_res_per, pl.commission_on_sale_price as pl_comm_on_sale, pl.is_resale_percentage as pl_is_resale_percentage, pl.museum_net_commission as pl_museum_net_commission, pl.merchant_net_commission as pl_merchant_net_commission, pl.hotel_commission_net_price as pl_hotel_commission_net_price, pl.hgs_commission_net_price as pl_hgs_commission_net_price FROM ( SELECT tlcdata.*, '----Sub catalog Level---' AS type2, sc.catalog_id, sc.ticketpriceschedule_id AS sc_ticketpriceschedule_id, sc.resale_currency_level AS sc_resale_currency_level, sc.hotel_prepaid_commission_percentage as sc_dist_per, sc.hgs_prepaid_commission_percentage as sc_hgs_per, sc.merchant_fee_percentage as sc_mer_per, sc.resale_percentage as sc_res_per, sc.commission_on_sale_price as sc_comm_on_sale , sc.is_resale_percentage as sc_is_resale_percentage, sc.museum_net_commission as sc_museum_net_commission, sc.merchant_net_commission as sc_merchant_net_commission, sc.hotel_commission_net_price as sc_hotel_commission_net_price, sc.hgs_commission_net_price as sc_hgs_commission_net_price FROM ( SELECT vt.vt_group_no, CONCAT(vt.transaction_id, 'R') AS transaction_id, vt.order_confirm_date, vt.created_date, vt.hotel_id, vt.channel_id, vt.ticketId, vt.ticketpriceschedule_id, vt.version, vt.row_type, vt.partner_gross_price, vt.partner_net_price, maxversion.salePrice, vt.order_currency_partner_gross_price, vt.order_currency_partner_net_price, vt.supplier_gross_price, vt.supplier_net_price, vt.col2, qc.cod_id AS company_id, qc.channel_id AS company_pricelist_id, qc.sub_catalog_id AS company_sub_catalog, '---TLC LEVEL---' AS TYPE, tlc.ticketpriceschedule_id AS tlc_ticketpriceschedule_id, tlc.resale_currency_level, tlc.hotel_prepaid_commission_percentage as tlc_dist_per, tlc.hgs_prepaid_commission_percentage as tlc_hgs_per, tlc.merchant_fee_percentage as tlc_mer_per, tlc.resale_percentage as tlc_res_per, tlc.commission_on_sale_price as tlc_comm_on_sale, tlc.is_resale_percentage as tlc_is_resale_percentage, tlc.museum_net_commission as tlc_museum_net_commission, tlc.merchant_net_commission as tlc_merchant_net_commission, tlc.hotel_commission_net_price as tlc_hotel_commission_net_price, tlc.hgs_commission_net_price as tlc_hgs_commission_net_price FROM visitor_tickets vt JOIN( SELECT vt_group_no, transaction_id, row_type, max(case when row_type = '1' then partner_net_price else 0 end) as salePrice, MAX(VERSION) AS VERSION FROM visitor_tickets WHERE ticketId = '$ticket_id' and vt_group_no IN($mismatchvgn) AND col2 != '2' and transaction_type_name not like '%Reprice Surcharge%' and transaction_type_name not like '%Reprice Discount%' GROUP BY vt_group_no, transaction_id ) AS maxversion ON vt.vt_group_no = maxversion.vt_group_no AND vt.transaction_id = maxversion.transaction_id AND ABS(vt.version - maxversion.version) = '0' and vt.col2 != '2' LEFT JOIN tmp.qr_codes qc ON qc.cod_id = vt.hotel_id AND qc.cashier_type = '1' LEFT JOIN tmp.ticket_level_commission tlc ON tlc.hotel_id = vt.hotel_id AND tlc.ticketpriceschedule_id = vt.ticketpriceschedule_id AND tlc.ticket_id = vt.ticketId AND tlc.deleted = '0' AND tlc.is_adjust_pricing = '1' WHERE vt.col2 != '2' ) AS tlcdata LEFT JOIN tmp.channel_level_commission sc ON tlcdata.ticketpriceschedule_id = sc.ticketpriceschedule_id AND tlcdata.ticketId = sc.ticket_id AND IF( tlcdata.company_sub_catalog = '0', 122222, tlcdata.company_sub_catalog ) = sc.catalog_id AND sc.is_adjust_pricing = '1' AND sc.deleted = '0' ) AS scdata LEFT JOIN tmp.channel_level_commission pl ON scdata.ticketpriceschedule_id = pl.ticketpriceschedule_id AND scdata.ticketId = pl.ticket_id AND scdata.channel_id = pl.channel_id AND pl.catalog_id = '0' AND pl.is_adjust_pricing = '1' AND pl.deleted = '0' ) AS shouldbe ) as final1) as final on vtt.vt_group_no = final.vt_group_no and ABS(vtt.version-final.version) = '0' and vtt.transaction_id = final.transaction_id and vtt.row_type = final.row_type where final.priceshouldbe != 'No_Setting_found' and ABS(final.priceshouldbe - final.partner_net_price) > '0.02' and final.row_type != '1' and vtt.col2 != '2') as ddd on ddd.ddd_vt_group_no = vtf.vt_group_no and (ddd.ddd_transaction_id+1) = (vtf.transaction_id+1) and ABS(ddd.ddd_version - vtf.version) = '0' and vtf.row_type = ddd.ddd_row_type;SELECT ROW_COUNT();"
            
            echo "------$(date '+%Y-%m-%d %H:%M:%S.%3N')--------" >> vt_select_query.sql

            echo "$select_query_vt" >> vt_select_query.sql

            # sleep 3
            echo "VT RDS insert query vt"
            timeout $TIMEOUT_PERIOD time mysql -h"$mysqlHost" -u"$mysqlUser" -p"$mysqlPassword" -D"$mysqlDatabase" -sN -e "$select_query_vt" || exit 1

            # sleep 3

            echo "VT secondary insert query vt"
            timeout $TIMEOUT_PERIOD time mysql -h"$SECHOST" -u"$SECUSER" -p"$SECPASSWORD" -D"$SECDATABASE" -sN -e "$select_query_vt" || exit 1


            zerosumcalculationselect="select vtt.transaction_id, vtt.vt_group_no, vtt.partner_net_price, vtt.version, vtt.row_type, vtt.partner_net_price+base.difference as shouldbe from visitor_tickets vtt join (select *, salePrice-otherPrice as difference from (SELECT vt.vt_group_no,vt.version,vt.action_performed,vt.is_refunded, vt.transaction_id, sum(case when vt.row_type = '1' then vt.partner_net_price else 0 end) as salePrice, sum(case when vt.row_type in ('2','3','4','17') then vt.partner_net_price else 0 end) as otherPrice, hotel_id, ticketId, ticketpriceschedule_id, channel_id, reseller_id, '0' as status FROM visitor_tickets vt JOIN( SELECT vt_group_no, transaction_id, row_type, max(case when row_type = '1' then partner_net_price else 0 end) as salePrice, MAX(VERSION) AS VERSION FROM visitor_tickets WHERE ticketId = '$ticket_id' and vt_group_no IN ($mismatchvgn) AND col2 != '2' and transaction_type_name not like '%Reprice Surcharge%' and transaction_type_name not like '%Reprice Discount%' and action_performed like '%EECommission_Jan' and row_type in ('1','2','3','4','17') GROUP BY vt_group_no, transaction_id ) AS maxversion ON vt.vt_group_no = maxversion.vt_group_no AND vt.transaction_id = maxversion.transaction_id and vt.col2 != '2' AND ABS(vt.version - maxversion.version) = '0' and vt.action_performed like '%EECommission_Jan' group by vt.vt_group_no,vt.transaction_id, vt.version) as final where ABS(salePrice-otherPrice)>0.03) as base on base.vt_group_no = vtt.vt_group_no and (base.transaction_id+1) = (vtt.transaction_id+1) and ABS(vtt.version - base.version) = '0' where vtt.vt_group_no IN ($mismatchvgn) and vtt.ticketId = '$ticket_id' and vtt.row_type = '4' and vtt.col2!= '2'"

            echo "VT RDS Select zerosumcalculation"
            timeout $TIMEOUT_PERIOD time mysql -h"$mysqlHost" -u"$mysqlUser" -p"$mysqlPassword" -D"$mysqlDatabase" -sN -e "$zerosumcalculationselect" || exit 1

            zerosumcalculationupdate="update visitor_tickets vtt join (select *, salePrice-otherPrice as difference from (SELECT vt.vt_group_no,vt.version,vt.action_performed,vt.is_refunded, vt.transaction_id, sum(case when vt.row_type = '1' then vt.partner_net_price else 0 end) as salePrice, sum(case when vt.row_type in ('2','3','4','17') then vt.partner_net_price else 0 end) as otherPrice, hotel_id, ticketId, ticketpriceschedule_id, channel_id, reseller_id, '0' as status FROM visitor_tickets vt JOIN( SELECT vt_group_no, transaction_id, row_type, max(case when row_type = '1' then partner_net_price else 0 end) as salePrice, MAX(VERSION) AS VERSION FROM visitor_tickets WHERE ticketId = '$ticket_id' and vt_group_no IN ($mismatchvgn) AND col2 != '2' and transaction_type_name not like '%Reprice Surcharge%' and transaction_type_name not like '%Reprice Discount%' and action_performed like '%EECommission_Jan' and row_type in ('1','2','3','4','17') GROUP BY vt_group_no, transaction_id ) AS maxversion ON vt.vt_group_no = maxversion.vt_group_no AND vt.transaction_id = maxversion.transaction_id and vt.col2 != '2' AND ABS(vt.version - maxversion.version) = '0' and vt.action_performed like '%EECommission_Jan' group by vt.vt_group_no,vt.transaction_id, vt.version) as final where ABS(salePrice-otherPrice)>0.03) as base on base.vt_group_no = vtt.vt_group_no and (base.transaction_id+1) = (vtt.transaction_id+1) and ABS(vtt.version - base.version) = '0' set vtt.partner_net_price = vtt.partner_net_price+base.difference, vtt.partner_gross_price = ((vtt.partner_net_price+base.difference)*(100+vtt.tax_value/100)) where vtt.vt_group_no IN ($mismatchvgn) and vtt.ticketId = '$ticket_id' and vtt.row_type = '4' and vtt.col2!= '2' and vtt.action_performed like '%EECommission_Jan';select ROW_COUNT();"

            echo "VT RDS row_type mismatch update"
            timeout $TIMEOUT_PERIOD time mysql -h"$mysqlHost" -u"$mysqlUser" -p"$mysqlPassword" -D"$mysqlDatabase" -sN -e "$zerosumcalculationupdate" || exit 1

            # sleep 3

            echo "VT secondary row_type mismatch update"
            timeout $TIMEOUT_PERIOD time mysql -h"$SECHOST" -u"$SECUSER" -p"$SECPASSWORD" -D"$SECDATABASE" -sN -e "$zerosumcalculationupdate" || exit 1
            
            sleep 3
            select_query_pt="insert into prepaid_tickets (prepaid_ticket_id, is_combi_ticket, visitor_group_no, ticket_id, shared_capacity_id, ticket_booking_id, related_order_id, related_booking_id, hotel_ticket_overview_id, hotel_id, own_supplier_id, distributor_partner_id, distributor_partner_name, hotel_name, shift_id, cashier_register_id, pos_point_id, pos_point_name, channel_id, channel_name, reseller_id, reseller_name, saledesk_id, saledesk_name, title, age_group, museum_id, museum_name, additional_information, location, highlights, image, oroginal_price, order_currency_oroginal_price, discount, order_currency_discount, is_discount_in_percent, price, order_currency_price, ticket_scan_price, cc_rows_value, tax, distributor_type, tax_name, net_price, order_currency_net_price, ticket_amount_before_extra_discount, extra_discount, extra_fee, order_currency_extra_discount, is_combi_discount, combi_discount_gross_amount, order_currency_combi_discount_gross_amount, is_discount_code, discount_code_value, discount_code_amount, order_currency_discount_code_amount, discount_code_promotion_title, service_cost_type, service_cost, net_service_cost, ticket_type, ticket_type_additional_info, discount_applied_on_how_many_tickets, quantity, refund_quantity, timeslot, from_time, to_time, selected_date, booking_selected_date, valid_till, created_date_time, created_at, scanned_at, redemption_notified_at,action_performed, redeem_date_time, is_prioticket, product_type, shop_category_name, rezgo_id, rezgo_ticket_id, rezgo_ticket_price, tps_id, group_type_ticket, group_price, group_quantity, group_linked_with, group_id, supplier_currency_code, supplier_currency_symbol, order_currency_code, order_currency_symbol, currency_rate, selected_quantity, min_qty, max_qty, passNo, bleep_pass_no, pass_type, used, activated, visitor_tickets_id, activation_method, invoice_method_label, booking_type, split_payment_detail, timezone, is_pre_selected_ticket, is_prepaid, is_cancelled, deleted, time_based_done, booking_status, order_status, is_refunded, refunded_by, without_elo_reference_no, is_voucher, is_iticket_product, reference_id, is_addon_ticket, cluster_group_id, clustering_id, related_product_id, parent_product_id, related_product_title, pos_point_id_on_redeem, pos_point_name_on_redeem, distributor_id_on_redeem, distributor_cashier_id_on_redeem, third_party_type, third_party_booking_reference, third_party_response_data, supplier_original_price, supplier_discount, supplier_price, supplier_tax, supplier_net_price,museum_net_fee, distributor_net_fee,hgs_net_fee,museum_gross_fee, distributor_gross_fee,hgs_gross_fee, second_party_type, second_party_booking_reference, second_party_passNo, batch_id, batch_reference, cashier_id, cashier_name, redeem_users, cashier_code, location_code, voucher_updated_by, voucher_updated_by_name, redeem_method, tp_payment_method, order_confirm_date, payment_date, museum_cashier_id, museum_cashier_name, extra_text_field_answer, pick_up_location, refund_note, manual_payment_note, channel_type, financial_id, financial_name, is_custom_setting, external_product_id, account_number, chart_number, is_invoice, split_card_amount, split_cash_amount, split_voucher_amount, split_direct_payment_amount, is_data_moved, last_imported_date, redeem_by_ticket_id, redeem_by_ticket_title, updated_at, commission_type, barcode_type, guest_names, guest_emails, secondary_guest_email, secondary_guest_name, passport_number, order_status_hto, pspReference, merchantReference, merchantAccountCode, reserved_1, reserved_2, reserved_3, authcode, payment_gateway, payment_conditions, payment_term_category, order_cancellation_date, voucher_creation_date, partner_category_id, partner_category_name,last_modified_at, order_updated_cashier_id, order_updated_cashier_name, primary_host_name, is_order_confirmed, booking_information, extra_booking_information, contact_details, contact_information, phone_number, booking_details, market_merchant_id, merchant_admin_id, pax, capacity, commission_json, supplier_cost, partner_cost, tax_id, tax_exception_applied, version, supplier_tax_id, merchant_currency_code, merchant_price, merchant_net_price, merchant_tax_id, admin_currency_code, expiry_date, validity_date, \`unlock\`, checkin_uid, checkin_date, voucher_release_date) select ppt.* from (select pt.prepaid_ticket_id, pt.is_combi_ticket, pt.visitor_group_no, pt.ticket_id, pt.shared_capacity_id, pt.ticket_booking_id, pt.related_order_id, pt.related_booking_id, pt.hotel_ticket_overview_id, pt.hotel_id, pt.own_supplier_id, pt.distributor_partner_id, pt.distributor_partner_name, pt.hotel_name, pt.shift_id, pt.cashier_register_id, pt.pos_point_id, pt.pos_point_name, pt.channel_id, pt.channel_name, pt.reseller_id, pt.reseller_name, pt.saledesk_id, pt.saledesk_name, pt.title, pt.age_group, pt.museum_id, pt.museum_name, pt.additional_information, pt.location, pt.highlights, pt.image, pt.oroginal_price, pt.order_currency_oroginal_price, pt.discount, pt.order_currency_discount, pt.is_discount_in_percent, pt.price, pt.order_currency_price, pt.ticket_scan_price, pt.cc_rows_value, pt.tax, pt.distributor_type, pt.tax_name, pt.net_price, pt.order_currency_net_price, pt.ticket_amount_before_extra_discount, pt.extra_discount, pt.extra_fee, pt.order_currency_extra_discount, pt.is_combi_discount, pt.combi_discount_gross_amount, pt.order_currency_combi_discount_gross_amount, pt.is_discount_code, pt.discount_code_value, pt.discount_code_amount, pt.order_currency_discount_code_amount, pt.discount_code_promotion_title, pt.service_cost_type, pt.service_cost, pt.net_service_cost, pt.ticket_type, pt.ticket_type_additional_info, pt.discount_applied_on_how_many_tickets, pt.quantity, pt.refund_quantity, pt.timeslot, pt.from_time, pt.to_time, pt.selected_date, pt.booking_selected_date, pt.valid_till, pt.created_date_time, pt.created_at, pt.scanned_at, pt.redemption_notified_at, concat(pt.action_performed, ', EECommission_Jan') as action_performed, pt.redeem_date_time, pt.is_prioticket, pt.product_type, pt.shop_category_name, pt.rezgo_id, pt.rezgo_ticket_id, pt.rezgo_ticket_price, pt.tps_id, pt.group_type_ticket, pt.group_price, pt.group_quantity, pt.group_linked_with, pt.group_id, pt.supplier_currency_code, pt.supplier_currency_symbol, pt.order_currency_code, pt.order_currency_symbol, pt.currency_rate, pt.selected_quantity, pt.min_qty, pt.max_qty, pt.passNo, pt.bleep_pass_no, pt.pass_type, pt.used, pt.activated, pt.visitor_tickets_id, pt.activation_method, pt.invoice_method_label, pt.booking_type, pt.split_payment_detail, pt.timezone, pt.is_pre_selected_ticket, pt.is_prepaid, pt.is_cancelled, pt.deleted, pt.time_based_done, pt.booking_status, pt.order_status, pt.is_refunded, pt.refunded_by, pt.without_elo_reference_no, pt.is_voucher, pt.is_iticket_product, pt.reference_id, pt.is_addon_ticket, pt.cluster_group_id, pt.clustering_id, pt.related_product_id, pt.parent_product_id, pt.related_product_title, pt.pos_point_id_on_redeem, pt.pos_point_name_on_redeem, pt.distributor_id_on_redeem, pt.distributor_cashier_id_on_redeem, pt.third_party_type, pt.third_party_booking_reference, pt.third_party_response_data, pt.supplier_original_price, pt.supplier_discount, pt.supplier_price, pt.supplier_tax, pt.supplier_net_price, vvt.purchase_price as museum_net_fee, vvt.distributor_fee as distributor_net_fee, vvt.hgs_fee as hgs_net_fee, vvt.purchase_priceg as museum_gross_fee, vvt.distributor_feeg as distributor_gross_fee, vvt.hgs_feeg as hgs_gross_fee, pt.second_party_type, pt.second_party_booking_reference, pt.second_party_passNo, pt.batch_id, pt.batch_reference, pt.cashier_id, pt.cashier_name, pt.redeem_users, pt.cashier_code, pt.location_code, pt.voucher_updated_by, pt.voucher_updated_by_name, pt.redeem_method, pt.tp_payment_method, pt.order_confirm_date, pt.payment_date, pt.museum_cashier_id, pt.museum_cashier_name, pt.extra_text_field_answer, pt.pick_up_location, pt.refund_note, pt.manual_payment_note, pt.channel_type, pt.financial_id, pt.financial_name, pt.is_custom_setting, pt.external_product_id, pt.account_number, pt.chart_number, pt.is_invoice, pt.split_card_amount, pt.split_cash_amount, pt.split_voucher_amount, pt.split_direct_payment_amount, pt.is_data_moved, pt.last_imported_date, pt.redeem_by_ticket_id, pt.redeem_by_ticket_title, pt.updated_at, pt.commission_type, pt.barcode_type, pt.guest_names, pt.guest_emails, pt.secondary_guest_email, pt.secondary_guest_name, pt.passport_number, pt.order_status_hto, pt.pspReference, pt.merchantReference, pt.merchantAccountCode, pt.reserved_1, pt.reserved_2, pt.reserved_3, pt.authcode, pt.payment_gateway, pt.payment_conditions, pt.payment_term_category, pt.order_cancellation_date, pt.voucher_creation_date, pt.partner_category_id, pt.partner_category_name,CURRENT_TIMESTAMP as last_modified_at, pt.order_updated_cashier_id, pt.order_updated_cashier_name, pt.primary_host_name, pt.is_order_confirmed, pt.booking_information, pt.extra_booking_information, pt.contact_details, pt.contact_information, pt.phone_number, pt.booking_details, pt.market_merchant_id, pt.merchant_admin_id, pt.pax, pt.capacity, pt.commission_json, pt.supplier_cost, pt.partner_cost, pt.tax_id, pt.tax_exception_applied, ROUND((pt.version+1),1) as version, pt.supplier_tax_id, pt.merchant_currency_code, pt.merchant_price, pt.merchant_net_price, pt.merchant_tax_id, pt.admin_currency_code, pt.expiry_date, pt.validity_date, pt.unlock, pt.checkin_uid, pt.checkin_date, pt.voucher_release_date from prepaid_tickets pt join (SELECT transaction_id,vt_group_no,version,ticketId,MAX(CASE WHEN row_type = '1' THEN partner_net_price ELSE 0 END) AS sale_price,MAX(CASE WHEN row_type = '2' THEN partner_net_price ELSE 0 END) AS purchase_price,MAX(CASE WHEN row_type = '3' THEN partner_net_price ELSE 0 END) AS distributor_fee,MAX(CASE WHEN row_type = '4' THEN partner_net_price ELSE 0 END) AS hgs_fee,MAX(CASE WHEN row_type = '17' THEN partner_net_price ELSE 0 END) AS merchant_fee,MAX(CASE WHEN row_type = '1' THEN partner_gross_price ELSE 0 END) AS sale_priceg,MAX(CASE WHEN row_type = '2' THEN partner_gross_price ELSE 0 END) AS purchase_priceg,MAX(CASE WHEN row_type = '3' THEN partner_gross_price ELSE 0 END) AS distributor_feeg,MAX(CASE WHEN row_type = '4' THEN partner_gross_price ELSE 0 END) AS hgs_feeg FROM visitor_tickets WHERE vt_group_no in ($mismatchvgn) and action_performed like '%EECommission_Jan' and col2 != '2' GROUP BY vt_group_no,transaction_id,ticketpriceschedule_id) as vvt on pt.prepaid_ticket_id = vvt.transaction_id and pt.visitor_group_no = vvt.vt_group_no where pt.is_addon_ticket != '2') as ppt join (select pt.visitor_group_no, pt.prepaid_ticket_id, max(pt.version) as version from prepaid_tickets pt join (SELECT transaction_id,vt_group_no,version,ticketId,MAX(CASE WHEN row_type = '1' THEN partner_net_price ELSE 0 END) AS sale_price,MAX(CASE WHEN row_type = '2' THEN partner_net_price ELSE 0 END) AS purchase_price,MAX(CASE WHEN row_type = '3' THEN partner_net_price ELSE 0 END) AS distributor_fee,MAX(CASE WHEN row_type = '4' THEN partner_net_price ELSE 0 END) AS hgs_fee,MAX(CASE WHEN row_type = '17' THEN partner_net_price ELSE 0 END) AS merchant_fee,MAX(CASE WHEN row_type = '1' THEN partner_gross_price ELSE 0 END) AS sale_priceg,MAX(CASE WHEN row_type = '2' THEN partner_gross_price ELSE 0 END) AS purchase_priceg,MAX(CASE WHEN row_type = '3' THEN partner_gross_price ELSE 0 END) AS distributor_feeg,MAX(CASE WHEN row_type = '4' THEN partner_gross_price ELSE 0 END) AS hgs_feeg FROM visitor_tickets WHERE vt_group_no in ($mismatchvgn) and action_performed like '%EECommission_Jan' and col2 != '2' GROUP BY vt_group_no,transaction_id,ticketpriceschedule_id) as vvt on pt.prepaid_ticket_id = vvt.transaction_id and pt.visitor_group_no = vvt.vt_group_no where pt.is_addon_ticket != '2' group by pt.visitor_group_no, pt.prepaid_ticket_id) as trp on ppt.visitor_group_no = trp.visitor_group_no and ppt.prepaid_ticket_id = trp.prepaid_ticket_id and ABS(ROUND(ppt.version-(trp.version+1),2)) = '0';SELECT ROW_COUNT()"

            echo "------$(date '+%Y-%m-%d %H:%M:%S.%3N')--------" >> pt_select_query.sql

            echo "$select_query_pt" >> pt_select_query.sql

            echo "pt insert query rds"

            timeout $TIMEOUT_PERIOD time mysql -h"$mysqlHost" -u"$mysqlUser" -p"$mysqlPassword" -D"$mysqlDatabase" -sN -e "$select_query_pt" || exit 1

            # sleep 3

            echo "pt insert query sec"

            timeout $TIMEOUT_PERIOD time mysql -h"$SECHOST" -u"$SECUSER" -p"$SECPASSWORD" -D"$SECDATABASE" -sN -e "$select_query_pt" || exit 1

            # sleep 3

            timeout $TIMEOUT_PERIOD time mysql -h"$DB_HOST" -u"$DB_USER" --port=$DB_PORT -p"$DB_PASSWORD" -D"$DB_NAME" -sN -e "update $tablename set status = '3' where vt_group_no in ($batch_str);SELECT ROW_COUNT()" || exit 1

            echo "Sleep Started to Run next VGNS"
            echo "------$(date '+%Y-%m-%d %H:%M:%S.%3N')--------"

            echo "https://report.prioticket.com/Insert_api_data_nested/api_results_v2/$mismatchvgn" >> /home/intersoft-admin/Desktop/rattan.txt
            # curl https://report.prioticket.com/Insert_api_data_nested/api_results_v2/$mismatchvgn

            sleep 3
        fi
    done
done


# row_type mismatch fix query and put everything in row_type 4


# update visitor_tickets vtt join (select *, salePrice-otherPrice as difference from (SELECT vt.vt_group_no,vt.version,vt.action_performed,vt.is_refunded, vt.transaction_id, sum(case when vt.row_type = '1' then vt.partner_net_price else 0 end) as salePrice, sum(case when vt.row_type in ('2','3','4','17') then vt.partner_net_price else 0 end) as otherPrice, hotel_id, ticketId, ticketpriceschedule_id, channel_id, reseller_id, '0' as status FROM visitor_tickets vt JOIN( SELECT vt_group_no, transaction_id, row_type, max(case when row_type = '1' then partner_net_price else 0 end) as salePrice, MAX(VERSION) AS VERSION FROM visitor_tickets WHERE vt_group_no IN (172598024205600) AND col2 != '2' and transaction_type_name not like '%Reprice Surcharge%' and transaction_type_name not like '%Reprice Discount%' and action_performed like '%EECommission_Jan' and row_type in ('1','2','3','4','17') GROUP BY vt_group_no, transaction_id ) AS maxversion ON vt.vt_group_no = maxversion.vt_group_no AND vt.transaction_id = maxversion.transaction_id and vt.col2 != '2' AND ABS(vt.version - maxversion.version) = '0' and vt.action_performed like '%EECommission_Jan' group by vt.vt_group_no,vt.transaction_id, vt.version) as final where ABS(salePrice-otherPrice)>0.03) as base on base.vt_group_no = vtt.vt_group_no and (base.transaction_id+1) = (vtt.transaction_id+1) and ABS(vtt.version - base.version) = '0' set vtt.partner_net_price = vtt.partner_net_price+base.difference where vtt.vt_group_no IN (172598024205600) and vtt.row_type = '4' and vtt.col2!= '2' and vtt.action_performed like '%EECommission_Jan'